/* ----------------------------------------------------------------------------
 *
 * Author:      Kjell Swedin
 * Description: stringify the enum values to representing xpaths
 *                      to elements of a fuelbed file
 * Date:        7/5/2016
 *
 ----------------------------------------------------------------------------- */
#include "fuelbed_ids.h"
#include <map>
#include <cassert>

using std::string;

#if 0
// save the contents of the FBTypes to a file and use to generate structure below
import sys

if len(sys.argv) > 1:
    with open(sys.argv[1], 'r') as infile:
        enums = []
        for line in infile:
            line = line.strip()
            if line.startswith('e'):
                if line.endswith(','):
                    line = line[:len(line)-1]
                enums.append(line)
        print('std::map<FBTypes, std::string> to_string = {')
        for enum in sorted(enums):
            newLine = '{{ FBTypes::{}, "{}" }},'.format(enum, enum)
            print(newLine)
        print('};')
#endif

string
FBTypesToString(FBTypes type)
{
    static const std::map<FBTypes, string> to_string = {
        { FBTypes::eADDRESS, "eADDRESS" },
        { FBTypes::eAFFILIATION, "eAFFILIATION" },
        { FBTypes::eCANOPY_LADDER_FUELS_MAXIMUM_HEIGHT, "eCANOPY_LADDER_FUELS_MAXIMUM_HEIGHT" },
        { FBTypes::eCANOPY_LADDER_FUELS_MINIMUM_HEIGHT, "eCANOPY_LADDER_FUELS_MINIMUM_HEIGHT" },
        { FBTypes::eCANOPY_LADDER_FUELS_TYPE, "eCANOPY_LADDER_FUELS_TYPE" },
        { FBTypes::eCANOPY_LADDER_FUELS_IS_VERTICALLY_CONTIGUOUS, "eCANOPY_LADDER_FUELS_IS_VERTICALLY_CONTIGUOUS" },
        { FBTypes::eCANOPY_SNAGS_CLASS_1_ALL_OTHERS_DIAMETER, "eCANOPY_SNAGS_CLASS_1_ALL_OTHERS_DIAMETER" },
        { FBTypes::eCANOPY_SNAGS_CLASS_1_ALL_OTHERS_HEIGHT, "eCANOPY_SNAGS_CLASS_1_ALL_OTHERS_HEIGHT" },
        { FBTypes::eCANOPY_SNAGS_CLASS_1_ALL_OTHERS_STEM_DENSITY, "eCANOPY_SNAGS_CLASS_1_ALL_OTHERS_STEM_DENSITY" },
        { FBTypes::eCANOPY_SNAGS_CLASS_1_CONIFERS_WITH_FOLIAGE_DIAMETER, "eCANOPY_SNAGS_CLASS_1_CONIFERS_WITH_FOLIAGE_DIAMETER" },
        { FBTypes::eCANOPY_SNAGS_CLASS_1_CONIFERS_WITH_FOLIAGE_HEIGHT, "eCANOPY_SNAGS_CLASS_1_CONIFERS_WITH_FOLIAGE_HEIGHT" },
        { FBTypes::eCANOPY_SNAGS_CLASS_1_CONIFERS_WITH_FOLIAGE_HEIGHT_TO_CROWN_BASE, "eCANOPY_SNAGS_CLASS_1_CONIFERS_WITH_FOLIAGE_HEIGHT_TO_CROWN_BASE" },
        { FBTypes::eCANOPY_SNAGS_CLASS_1_CONIFERS_WITH_FOLIAGE_PERCENT_COVER, "eCANOPY_SNAGS_CLASS_1_CONIFERS_WITH_FOLIAGE_PERCENT_COVER" },
        { FBTypes::eCANOPY_SNAGS_CLASS_1_CONIFERS_WITH_FOLIAGE_STEM_DENSITY, "eCANOPY_SNAGS_CLASS_1_CONIFERS_WITH_FOLIAGE_STEM_DENSITY" },
        { FBTypes::eCANOPY_SNAGS_CLASS_2_DIAMETER, "eCANOPY_SNAGS_CLASS_2_DIAMETER" },
        { FBTypes::eCANOPY_SNAGS_CLASS_2_HEIGHT, "eCANOPY_SNAGS_CLASS_2_HEIGHT" },
        { FBTypes::eCANOPY_SNAGS_CLASS_2_STEM_DENSITY, "eCANOPY_SNAGS_CLASS_2_STEM_DENSITY" },
        { FBTypes::eCANOPY_SNAGS_CLASS_3_DIAMETER, "eCANOPY_SNAGS_CLASS_3_DIAMETER" },
        { FBTypes::eCANOPY_SNAGS_CLASS_3_HEIGHT, "eCANOPY_SNAGS_CLASS_3_HEIGHT" },
        { FBTypes::eCANOPY_SNAGS_CLASS_3_STEM_DENSITY, "eCANOPY_SNAGS_CLASS_3_STEM_DENSITY" },
        { FBTypes::eCANOPY_TREES_MIDSTORY_DIAMETER_AT_BREAST_HEIGHT, "eCANOPY_TREES_MIDSTORY_DIAMETER_AT_BREAST_HEIGHT" },
        { FBTypes::eCANOPY_TREES_MIDSTORY_HEIGHT, "eCANOPY_TREES_MIDSTORY_HEIGHT" },
        { FBTypes::eCANOPY_TREES_MIDSTORY_HEIGHT_TO_LIVE_CROWN, "eCANOPY_TREES_MIDSTORY_HEIGHT_TO_LIVE_CROWN" },
        { FBTypes::eCANOPY_TREES_MIDSTORY_PERCENT_COVER, "eCANOPY_TREES_MIDSTORY_PERCENT_COVER" },
        { FBTypes::eCANOPY_TREES_MIDSTORY_STEM_DENSITY, "eCANOPY_TREES_MIDSTORY_STEM_DENSITY" },
        { FBTypes::eCANOPY_TREES_OVERSTORY_DIAMETER_AT_BREAST_HEIGHT, "eCANOPY_TREES_OVERSTORY_DIAMETER_AT_BREAST_HEIGHT" },
        { FBTypes::eCANOPY_TREES_OVERSTORY_HEIGHT, "eCANOPY_TREES_OVERSTORY_HEIGHT" },
        { FBTypes::eCANOPY_TREES_OVERSTORY_HEIGHT_TO_LIVE_CROWN, "eCANOPY_TREES_OVERSTORY_HEIGHT_TO_LIVE_CROWN" },
        { FBTypes::eCANOPY_TREES_OVERSTORY_PERCENT_COVER, "eCANOPY_TREES_OVERSTORY_PERCENT_COVER" },
        { FBTypes::eCANOPY_TREES_OVERSTORY_STEM_DENSITY, "eCANOPY_TREES_OVERSTORY_STEM_DENSITY" },
        { FBTypes::eCANOPY_TREES_TOTAL_PERCENT_COVER, "eCANOPY_TREES_TOTAL_PERCENT_COVER" },
        { FBTypes::eCANOPY_TREES_UNDERSTORY_DIAMETER_AT_BREAST_HEIGHT, "eCANOPY_TREES_UNDERSTORY_DIAMETER_AT_BREAST_HEIGHT" },
        { FBTypes::eCANOPY_TREES_UNDERSTORY_HEIGHT, "eCANOPY_TREES_UNDERSTORY_HEIGHT" },
        { FBTypes::eCANOPY_TREES_UNDERSTORY_HEIGHT_TO_LIVE_CROWN, "eCANOPY_TREES_UNDERSTORY_HEIGHT_TO_LIVE_CROWN" },
        { FBTypes::eCANOPY_TREES_UNDERSTORY_PERCENT_COVER, "eCANOPY_TREES_UNDERSTORY_PERCENT_COVER" },
        { FBTypes::eCANOPY_TREES_UNDERSTORY_STEM_DENSITY, "eCANOPY_TREES_UNDERSTORY_STEM_DENSITY" },
        { FBTypes::eCHANGE_AGENT, "eCHANGE_AGENT" },
        { FBTypes::eCONDITION_CLASS, "eCONDITION_CLASS" },
        { FBTypes::eCOVER_TYPE, "eCOVER_TYPE" },
        { FBTypes::eDATE_COLLECTED, "eDATE_COLLECTED" },
        { FBTypes::eECOREGION, "eECOREGION" },
        { FBTypes::eFILE_OWNER_EMAIL, "eFILE_OWNER_EMAIL" },
        { FBTypes::eFUELBED_CONFIDENCE, "eFUELBED_CONFIDENCE" },
        { FBTypes::eFUELBED_DESCRIPTION, "eFUELBED_DESCRIPTION" },
        { FBTypes::eFUELBED_NAME, "eFUELBED_NAME" },
        { FBTypes::eFUELBED_NUMBER, "eFUELBED_NUMBER" },
        { FBTypes::eGROUND_FUEL_BASAL_ACCUMULATION_DEPTH, "eGROUND_FUEL_BASAL_ACCUMULATION_DEPTH" },
        { FBTypes::eGROUND_FUEL_BASAL_ACCUMULATION_LOADING, "eGROUND_FUEL_BASAL_ACCUMULATION_LOADING" },
        { FBTypes::eGROUND_FUEL_BASAL_ACCUMULATION_NUMBER_PER_UNIT_AREA, "eGROUND_FUEL_BASAL_ACCUMULATION_NUMBER_PER_UNIT_AREA" },
        { FBTypes::eGROUND_FUEL_BASAL_ACCUMULATION_RADIUS, "eGROUND_FUEL_BASAL_ACCUMULATION_RADIUS" },
        { FBTypes::eGROUND_FUEL_DUFF_LOWER_DEPTH, "eGROUND_FUEL_DUFF_LOWER_DEPTH" },
        { FBTypes::eGROUND_FUEL_DUFF_LOWER_LOADING, "eGROUND_FUEL_DUFF_LOWER_LOADING" },
        { FBTypes::eGROUND_FUEL_DUFF_LOWER_PERCENT_COVER, "eGROUND_FUEL_DUFF_LOWER_PERCENT_COVER" },
        { FBTypes::eGROUND_FUEL_DUFF_UPPER_DEPTH, "eGROUND_FUEL_DUFF_UPPER_DEPTH" },
        { FBTypes::eGROUND_FUEL_DUFF_UPPER_LOADING, "eGROUND_FUEL_DUFF_UPPER_LOADING" },
        { FBTypes::eGROUND_FUEL_DUFF_UPPER_PERCENT_COVER, "eGROUND_FUEL_DUFF_UPPER_PERCENT_COVER" },
        { FBTypes::eGROUND_FUEL_SQUIRREL_MIDDENS_DEPTH, "eGROUND_FUEL_SQUIRREL_MIDDENS_DEPTH" },
        { FBTypes::eGROUND_FUEL_SQUIRREL_MIDDENS_LOADING, "eGROUND_FUEL_SQUIRREL_MIDDENS_LOADING" },
        { FBTypes::eGROUND_FUEL_SQUIRREL_MIDDENS_NUMBER_PER_UNIT_AREA, "eGROUND_FUEL_SQUIRREL_MIDDENS_NUMBER_PER_UNIT_AREA" },
        { FBTypes::eGROUND_FUEL_SQUIRREL_MIDDENS_RADIUS, "eGROUND_FUEL_SQUIRREL_MIDDENS_RADIUS" },
        { FBTypes::eHERBACEOUS_PRIMARY_LAYER_HEIGHT, "eHERBACEOUS_PRIMARY_LAYER_HEIGHT" },
        { FBTypes::eHERBACEOUS_PRIMARY_LAYER_LOADING, "eHERBACEOUS_PRIMARY_LAYER_LOADING" },
        { FBTypes::eHERBACEOUS_PRIMARY_LAYER_PERCENT_COVER, "eHERBACEOUS_PRIMARY_LAYER_PERCENT_COVER" },
        { FBTypes::eHERBACEOUS_PRIMARY_LAYER_PERCENT_LIVE, "eHERBACEOUS_PRIMARY_LAYER_PERCENT_LIVE" },
        { FBTypes::eHERBACEOUS_SECONDARY_LAYER_HEIGHT, "eHERBACEOUS_SECONDARY_LAYER_HEIGHT" },
        { FBTypes::eHERBACEOUS_SECONDARY_LAYER_LOADING, "eHERBACEOUS_SECONDARY_LAYER_LOADING" },
        { FBTypes::eHERBACEOUS_SECONDARY_LAYER_PERCENT_COVER, "eHERBACEOUS_SECONDARY_LAYER_PERCENT_COVER" },
        { FBTypes::eHERBACEOUS_SECONDARY_LAYER_PERCENT_LIVE, "eHERBACEOUS_SECONDARY_LAYER_PERCENT_LIVE" },
        { FBTypes::eLITTER_ARRANGEMENT, "eLITTER_ARRANGEMENT" },
        { FBTypes::eLITTER_LITTER_TYPE_BROADLEAF_DECIDUOUS_RELATIVE_COVER, "eLITTER_LITTER_TYPE_BROADLEAF_DECIDUOUS_RELATIVE_COVER" },
        { FBTypes::eLITTER_LITTER_TYPE_BROADLEAF_EVERGREEN_RELATIVE_COVER, "eLITTER_LITTER_TYPE_BROADLEAF_EVERGREEN_RELATIVE_COVER" },
        { FBTypes::eLITTER_LITTER_TYPE_GRASS_RELATIVE_COVER, "eLITTER_LITTER_TYPE_GRASS_RELATIVE_COVER" },
        { FBTypes::eLITTER_LITTER_TYPE_LONG_NEEDLE_PINE_RELATIVE_COVER, "eLITTER_LITTER_TYPE_LONG_NEEDLE_PINE_RELATIVE_COVER" },
        { FBTypes::eLITTER_LITTER_TYPE_OTHER_CONIFER_RELATIVE_COVER, "eLITTER_LITTER_TYPE_OTHER_CONIFER_RELATIVE_COVER" },
        { FBTypes::eLITTER_LITTER_TYPE_PALM_FROND_RELATIVE_COVER, "eLITTER_LITTER_TYPE_PALM_FROND_RELATIVE_COVER" },
        { FBTypes::eLITTER_LITTER_TYPE_SHORT_NEEDLE_PINE_RELATIVE_COVER, "eLITTER_LITTER_TYPE_SHORT_NEEDLE_PINE_RELATIVE_COVER" },
        { FBTypes::eMOSS_LICHEN_LITTER_GROUND_LICHEN_DEPTH, "eMOSS_LICHEN_LITTER_GROUND_LICHEN_DEPTH" },
        { FBTypes::eMOSS_LICHEN_LITTER_GROUND_LICHEN_LOADING, "eMOSS_LICHEN_LITTER_GROUND_LICHEN_LOADING" },
        { FBTypes::eMOSS_LICHEN_LITTER_GROUND_LICHEN_PERCENT_COVER, "eMOSS_LICHEN_LITTER_GROUND_LICHEN_PERCENT_COVER" },
        { FBTypes::eMOSS_LICHEN_LITTER_LITTER_DEPTH, "eMOSS_LICHEN_LITTER_LITTER_DEPTH" },
        { FBTypes::eMOSS_LICHEN_LITTER_LITTER_LOADING, "eMOSS_LICHEN_LITTER_LITTER_LOADING" },
        { FBTypes::eMOSS_LICHEN_LITTER_LITTER_PERCENT_COVER, "eMOSS_LICHEN_LITTER_LITTER_PERCENT_COVER" },
        { FBTypes::eMOSS_LICHEN_LITTER_MOSS_DEPTH, "eMOSS_LICHEN_LITTER_MOSS_DEPTH" },
        { FBTypes::eMOSS_LICHEN_LITTER_MOSS_LOADING, "eMOSS_LICHEN_LITTER_MOSS_LOADING" },
        { FBTypes::eMOSS_LICHEN_LITTER_MOSS_PERCENT_COVER, "eMOSS_LICHEN_LITTER_MOSS_PERCENT_COVER" },
        { FBTypes::eNATURAL_FIRE_REGIME, "eNATURAL_FIRE_REGIME" },
        { FBTypes::eNOTES, "eNOTES" },
        { FBTypes::ePHONE, "ePHONE" },
        { FBTypes::eSHRUBS_NEEDLE_DRAPE_AFFECTS_FIRE_BEHAVIOR, "eSHRUBS_NEEDLE_DRAPE_AFFECTS_FIRE_BEHAVIOR" },
        { FBTypes::eSHRUBS_PRIMARY_LAYER_HEIGHT, "eSHRUBS_PRIMARY_LAYER_HEIGHT" },
        { FBTypes::eSHRUBS_PRIMARY_LAYER_LOADING, "eSHRUBS_PRIMARY_LAYER_LOADING" },
        { FBTypes::eSHRUBS_PRIMARY_LAYER_PERCENT_COVER, "eSHRUBS_PRIMARY_LAYER_PERCENT_COVER" },
        { FBTypes::eSHRUBS_PRIMARY_LAYER_PERCENT_LIVE, "eSHRUBS_PRIMARY_LAYER_PERCENT_LIVE" },
        { FBTypes::eSHRUBS_SECONDARY_LAYER_HEIGHT, "eSHRUBS_SECONDARY_LAYER_HEIGHT" },
        { FBTypes::eSHRUBS_SECONDARY_LAYER_LOADING, "eSHRUBS_SECONDARY_LAYER_LOADING" },
        { FBTypes::eSHRUBS_SECONDARY_LAYER_PERCENT_COVER, "eSHRUBS_SECONDARY_LAYER_PERCENT_COVER" },
        { FBTypes::eSHRUBS_SECONDARY_LAYER_PERCENT_LIVE, "eSHRUBS_SECONDARY_LAYER_PERCENT_LIVE" },
        { FBTypes::eSTRUCTURAL_CLASS, "eSTRUCTURAL_CLASS" },
        { FBTypes::eUSER_NAME, "eUSER_NAME" },
        { FBTypes::eVEGETATION_FORM, "eVEGETATION_FORM" },
        { FBTypes::eWOODY_FUEL_ALL_DOWNED_WOODY_FUEL_DEPTH, "eWOODY_FUEL_ALL_DOWNED_WOODY_FUEL_DEPTH" },
        { FBTypes::eWOODY_FUEL_ALL_DOWNED_WOODY_FUEL_TOTAL_PERCENT_COVER, "eWOODY_FUEL_ALL_DOWNED_WOODY_FUEL_TOTAL_PERCENT_COVER" },
        { FBTypes::eWOODY_FUEL_PILES_CLEAN_LOADING, "eWOODY_FUEL_PILES_CLEAN_LOADING" },
        { FBTypes::eWOODY_FUEL_PILES_DIRTY_LOADING, "eWOODY_FUEL_PILES_DIRTY_LOADING" },
        { FBTypes::eWOODY_FUEL_PILES_VERYDIRTY_LOADING, "eWOODY_FUEL_PILES_VERYDIRTY_LOADING" },
        { FBTypes::eWOODY_FUEL_ROTTEN_WOOD_LOADINGS_GREATER_THAN_THREE_INCHES_GREATER_THAN_TWENTY_INCHES, "eWOODY_FUEL_ROTTEN_WOOD_LOADINGS_GREATER_THAN_THREE_INCHES_GREATER_THAN_TWENTY_INCHES" },
        { FBTypes::eWOODY_FUEL_ROTTEN_WOOD_LOADINGS_GREATER_THAN_THREE_INCHES_NINE_TO_TWENTY_INCHES, "eWOODY_FUEL_ROTTEN_WOOD_LOADINGS_GREATER_THAN_THREE_INCHES_NINE_TO_TWENTY_INCHES" },
        { FBTypes::eWOODY_FUEL_ROTTEN_WOOD_LOADINGS_GREATER_THAN_THREE_INCHES_THREE_TO_NINE_INCHES, "eWOODY_FUEL_ROTTEN_WOOD_LOADINGS_GREATER_THAN_THREE_INCHES_THREE_TO_NINE_INCHES" },
        { FBTypes::eWOODY_FUEL_SOUND_WOOD_LOADINGS_GREATER_THAN_THREE_INCHES_GREATER_THAN_TWENTY_INCHES, "eWOODY_FUEL_SOUND_WOOD_LOADINGS_GREATER_THAN_THREE_INCHES_GREATER_THAN_TWENTY_INCHES" },
        { FBTypes::eWOODY_FUEL_SOUND_WOOD_LOADINGS_GREATER_THAN_THREE_INCHES_NINE_TO_TWENTY_INCHES, "eWOODY_FUEL_SOUND_WOOD_LOADINGS_GREATER_THAN_THREE_INCHES_NINE_TO_TWENTY_INCHES" },
        { FBTypes::eWOODY_FUEL_SOUND_WOOD_LOADINGS_GREATER_THAN_THREE_INCHES_THREE_TO_NINE_INCHES, "eWOODY_FUEL_SOUND_WOOD_LOADINGS_GREATER_THAN_THREE_INCHES_THREE_TO_NINE_INCHES" },
        { FBTypes::eWOODY_FUEL_SOUND_WOOD_LOADINGS_ZERO_TO_THREE_INCHES_ONE_TO_THREE_INCHES, "eWOODY_FUEL_SOUND_WOOD_LOADINGS_ZERO_TO_THREE_INCHES_ONE_TO_THREE_INCHES" },
        { FBTypes::eWOODY_FUEL_SOUND_WOOD_LOADINGS_ZERO_TO_THREE_INCHES_QUARTER_INCH_TO_ONE_INCH, "eWOODY_FUEL_SOUND_WOOD_LOADINGS_ZERO_TO_THREE_INCHES_QUARTER_INCH_TO_ONE_INCH" },
        { FBTypes::eWOODY_FUEL_SOUND_WOOD_LOADINGS_ZERO_TO_THREE_INCHES_ZERO_TO_QUARTER_INCH, "eWOODY_FUEL_SOUND_WOOD_LOADINGS_ZERO_TO_THREE_INCHES_ZERO_TO_QUARTER_INCH" },
        { FBTypes::eWOODY_FUEL_STUMPS_LIGHTERED_PITCHY_DIAMETER, "eWOODY_FUEL_STUMPS_LIGHTERED_PITCHY_DIAMETER" },
        { FBTypes::eWOODY_FUEL_STUMPS_LIGHTERED_PITCHY_HEIGHT, "eWOODY_FUEL_STUMPS_LIGHTERED_PITCHY_HEIGHT" },
        { FBTypes::eWOODY_FUEL_STUMPS_LIGHTERED_PITCHY_STEM_DENSITY, "eWOODY_FUEL_STUMPS_LIGHTERED_PITCHY_STEM_DENSITY" },
        { FBTypes::eWOODY_FUEL_STUMPS_ROTTEN_DIAMETER, "eWOODY_FUEL_STUMPS_ROTTEN_DIAMETER" },
        { FBTypes::eWOODY_FUEL_STUMPS_ROTTEN_HEIGHT, "eWOODY_FUEL_STUMPS_ROTTEN_HEIGHT" },
        { FBTypes::eWOODY_FUEL_STUMPS_ROTTEN_STEM_DENSITY, "eWOODY_FUEL_STUMPS_ROTTEN_STEM_DENSITY" },
        { FBTypes::eWOODY_FUEL_STUMPS_SOUND_DIAMETER, "eWOODY_FUEL_STUMPS_SOUND_DIAMETER" },
        { FBTypes::eWOODY_FUEL_STUMPS_SOUND_HEIGHT, "eWOODY_FUEL_STUMPS_SOUND_HEIGHT" },
        { FBTypes::eWOODY_FUEL_STUMPS_SOUND_STEM_DENSITY, "eWOODY_FUEL_STUMPS_SOUND_STEM_DENSITY" },
    };
    
    if(to_string.count(type))
    {
        return to_string.at(type);
    }
    else
    {
        assert(false);  // shouldn't ever happen
    }
    return string("");
}

#if 0
import sys

if len(sys.argv) > 1:
    with open(sys.argv[1], 'r') as infile:
        enums = []
        for line in infile:
            line = line.strip()
            if line.startswith('e'):
                if line.endswith('DESCRIPTION,'):
                    line = line[:len(line)-1]
                    enums.append(line)
        print('std::map<FBSpeciesTypes, std::string> to_string = {')
        for enum in sorted(enums):
            newLine = '{{ FBSpeciesTypes::{}, "{}" }},'.format(enum, enum)
            print(newLine)
        print('};')

#endif

string
FBSpeciesTypesToString(FBSpeciesTypes type)
{
    std::map<FBSpeciesTypes, string> to_string = {
        { FBSpeciesTypes::eCANOPY_SNAGS_CLASS_1_ALL_OTHERS_SPECIES_SPECIES_DESCRIPTION, "eCANOPY_SNAGS_CLASS_1_ALL_OTHERS_SPECIES_SPECIES_DESCRIPTION" },
        { FBSpeciesTypes::eCANOPY_SNAGS_CLASS_1_CONIFERS_WITH_FOLIAGE_SPECIES_SPECIES_DESCRIPTION, "eCANOPY_SNAGS_CLASS_1_CONIFERS_WITH_FOLIAGE_SPECIES_SPECIES_DESCRIPTION" },
        { FBSpeciesTypes::eCANOPY_SNAGS_CLASS_2_SPECIES_SPECIES_DESCRIPTION, "eCANOPY_SNAGS_CLASS_2_SPECIES_SPECIES_DESCRIPTION" },
        { FBSpeciesTypes::eCANOPY_SNAGS_CLASS_3_SPECIES_SPECIES_DESCRIPTION, "eCANOPY_SNAGS_CLASS_3_SPECIES_SPECIES_DESCRIPTION" },
        { FBSpeciesTypes::eCANOPY_TREES_MIDSTORY_SPECIES_SPECIES_DESCRIPTION, "eCANOPY_TREES_MIDSTORY_SPECIES_SPECIES_DESCRIPTION" },
        { FBSpeciesTypes::eCANOPY_TREES_OVERSTORY_SPECIES_SPECIES_DESCRIPTION, "eCANOPY_TREES_OVERSTORY_SPECIES_SPECIES_DESCRIPTION" },
        { FBSpeciesTypes::eCANOPY_TREES_UNDERSTORY_SPECIES_SPECIES_DESCRIPTION, "eCANOPY_TREES_UNDERSTORY_SPECIES_SPECIES_DESCRIPTION" },
        { FBSpeciesTypes::eHERBACEOUS_PRIMARY_LAYER_SPECIES_SPECIES_DESCRIPTION, "eHERBACEOUS_PRIMARY_LAYER_SPECIES_SPECIES_DESCRIPTION" },
        { FBSpeciesTypes::eHERBACEOUS_SECONDARY_LAYER_SPECIES_SPECIES_DESCRIPTION, "eHERBACEOUS_SECONDARY_LAYER_SPECIES_SPECIES_DESCRIPTION" },
        { FBSpeciesTypes::eSHRUBS_PRIMARY_LAYER_SPECIES_SPECIES_DESCRIPTION, "eSHRUBS_PRIMARY_LAYER_SPECIES_SPECIES_DESCRIPTION" },
        { FBSpeciesTypes::eSHRUBS_SECONDARY_LAYER_SPECIES_SPECIES_DESCRIPTION, "eSHRUBS_SECONDARY_LAYER_SPECIES_SPECIES_DESCRIPTION" },
        { FBSpeciesTypes::eWOODY_FUEL_ROTTEN_WOOD_ALL_ROTTEN_WOOD_SPECIES_SPECIES_DESCRIPTION, "eWOODY_FUEL_ROTTEN_WOOD_ALL_ROTTEN_WOOD_SPECIES_SPECIES_DESCRIPTION" },
        { FBSpeciesTypes::eWOODY_FUEL_SOUND_WOOD_ALL_SOUND_WOOD_SPECIES_SPECIES_DESCRIPTION, "eWOODY_FUEL_SOUND_WOOD_ALL_SOUND_WOOD_SPECIES_SPECIES_DESCRIPTION" },
        { FBSpeciesTypes::eWOODY_FUEL_STUMPS_LIGHTERED_PITCHY_SPECIES_SPECIES_DESCRIPTION, "eWOODY_FUEL_STUMPS_LIGHTERED_PITCHY_SPECIES_SPECIES_DESCRIPTION" },
        { FBSpeciesTypes::eWOODY_FUEL_STUMPS_ROTTEN_SPECIES_SPECIES_DESCRIPTION, "eWOODY_FUEL_STUMPS_ROTTEN_SPECIES_SPECIES_DESCRIPTION" },
        { FBSpeciesTypes::eWOODY_FUEL_STUMPS_SOUND_SPECIES_SPECIES_DESCRIPTION, "eWOODY_FUEL_STUMPS_SOUND_SPECIES_SPECIES_DESCRIPTION" },
    };
    
    if(to_string.count(type))
    {
        return to_string.at(type);
    }
    else
    {
        assert(false);  // shouldn't ever happen
    }
    return string("");
}